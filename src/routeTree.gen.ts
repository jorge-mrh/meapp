/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignupRouteImport } from './routes/signup'
import { Route as LoginRouteImport } from './routes/login'
import { Route as ProtectedRouteImport } from './routes/_protected'
import { Route as ProtectedIndexRouteImport } from './routes/_protected/index'
import { Route as ProtectedCompleteProfileRouteImport } from './routes/_protected/complete-profile'
import { Route as ProtectedAiRouteImport } from './routes/_protected/ai'
import { Route as ProtectedActivityRouteImport } from './routes/_protected/activity'
import { Route as ProtectedAccountsRouteImport } from './routes/_protected/accounts'

const SignupRoute = SignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const ProtectedRoute = ProtectedRouteImport.update({
  id: '/_protected',
  getParentRoute: () => rootRouteImport,
} as any)
const ProtectedIndexRoute = ProtectedIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ProtectedRoute,
} as any)
const ProtectedCompleteProfileRoute =
  ProtectedCompleteProfileRouteImport.update({
    id: '/complete-profile',
    path: '/complete-profile',
    getParentRoute: () => ProtectedRoute,
  } as any)
const ProtectedAiRoute = ProtectedAiRouteImport.update({
  id: '/ai',
  path: '/ai',
  getParentRoute: () => ProtectedRoute,
} as any)
const ProtectedActivityRoute = ProtectedActivityRouteImport.update({
  id: '/activity',
  path: '/activity',
  getParentRoute: () => ProtectedRoute,
} as any)
const ProtectedAccountsRoute = ProtectedAccountsRouteImport.update({
  id: '/accounts',
  path: '/accounts',
  getParentRoute: () => ProtectedRoute,
} as any)

export interface FileRoutesByFullPath {
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/accounts': typeof ProtectedAccountsRoute
  '/activity': typeof ProtectedActivityRoute
  '/ai': typeof ProtectedAiRoute
  '/complete-profile': typeof ProtectedCompleteProfileRoute
  '/': typeof ProtectedIndexRoute
}
export interface FileRoutesByTo {
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/accounts': typeof ProtectedAccountsRoute
  '/activity': typeof ProtectedActivityRoute
  '/ai': typeof ProtectedAiRoute
  '/complete-profile': typeof ProtectedCompleteProfileRoute
  '/': typeof ProtectedIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_protected': typeof ProtectedRouteWithChildren
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/_protected/accounts': typeof ProtectedAccountsRoute
  '/_protected/activity': typeof ProtectedActivityRoute
  '/_protected/ai': typeof ProtectedAiRoute
  '/_protected/complete-profile': typeof ProtectedCompleteProfileRoute
  '/_protected/': typeof ProtectedIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/login'
    | '/signup'
    | '/accounts'
    | '/activity'
    | '/ai'
    | '/complete-profile'
    | '/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/signup'
    | '/accounts'
    | '/activity'
    | '/ai'
    | '/complete-profile'
    | '/'
  id:
    | '__root__'
    | '/_protected'
    | '/login'
    | '/signup'
    | '/_protected/accounts'
    | '/_protected/activity'
    | '/_protected/ai'
    | '/_protected/complete-profile'
    | '/_protected/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  ProtectedRoute: typeof ProtectedRouteWithChildren
  LoginRoute: typeof LoginRoute
  SignupRoute: typeof SignupRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_protected': {
      id: '/_protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_protected/': {
      id: '/_protected/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof ProtectedIndexRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/complete-profile': {
      id: '/_protected/complete-profile'
      path: '/complete-profile'
      fullPath: '/complete-profile'
      preLoaderRoute: typeof ProtectedCompleteProfileRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/ai': {
      id: '/_protected/ai'
      path: '/ai'
      fullPath: '/ai'
      preLoaderRoute: typeof ProtectedAiRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/activity': {
      id: '/_protected/activity'
      path: '/activity'
      fullPath: '/activity'
      preLoaderRoute: typeof ProtectedActivityRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/accounts': {
      id: '/_protected/accounts'
      path: '/accounts'
      fullPath: '/accounts'
      preLoaderRoute: typeof ProtectedAccountsRouteImport
      parentRoute: typeof ProtectedRoute
    }
  }
}

interface ProtectedRouteChildren {
  ProtectedAccountsRoute: typeof ProtectedAccountsRoute
  ProtectedActivityRoute: typeof ProtectedActivityRoute
  ProtectedAiRoute: typeof ProtectedAiRoute
  ProtectedCompleteProfileRoute: typeof ProtectedCompleteProfileRoute
  ProtectedIndexRoute: typeof ProtectedIndexRoute
}

const ProtectedRouteChildren: ProtectedRouteChildren = {
  ProtectedAccountsRoute: ProtectedAccountsRoute,
  ProtectedActivityRoute: ProtectedActivityRoute,
  ProtectedAiRoute: ProtectedAiRoute,
  ProtectedCompleteProfileRoute: ProtectedCompleteProfileRoute,
  ProtectedIndexRoute: ProtectedIndexRoute,
}

const ProtectedRouteWithChildren = ProtectedRoute._addFileChildren(
  ProtectedRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  ProtectedRoute: ProtectedRouteWithChildren,
  LoginRoute: LoginRoute,
  SignupRoute: SignupRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
